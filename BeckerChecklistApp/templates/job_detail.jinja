{% from 'macros.jinja' import render_description %}

{% extends 'base.jinja' %}

{% block content %}


<div class="container">
  <h1>{{ started_job.job.name }}</h1>
  <p>{{ started_job.job.description }}</p>
  <hr>
  <table style="margin-top: 10px;" class="table">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
        <th>Completed</th>
      </tr>
    </thead>
    <tbody>
      {% for job_item in job_items %}
      <tr>
        <td>{{ job_item.name }}</td>
        {{ render_description(job_item) }}
        <td class="checkbox">
          <input class="job-item larger" id="{{job_item.pk}}" type="checkbox" name="{{job_item.pk}}-completed"
            onclick="updateJobItem({{job_item.pk}}, this.checked)" {% if job_item.pk in completed_job_items%} checked{%
            endif %}>
        </td>
      </tr>
      {% endfor %}
    </tbody>
  </table>
  <div class="form-group">
    <label for="notes">Notes</label>
    <textarea class="form-control" id="notes" type="text" name="notes" onblur="updateNotes()"
      style="margin-bottom: 10px; width: 40vh" rows="4">{{started_job.notes}}</textarea>
  </div>
  <form class="job-form" id="job-form" method="POST">
    <input type="hidden" name="csrfmiddlewaretoken" value="{{ csrf_token }}">
    <button style="margin-bottom: 80px;" type=submit class="btn btn-primary btn-lg"
      onclick="event.preventDefault(); jobComplete()">Job Completed</button>
  </form>
  <style>
    .checkbox {
      text-align: center;
      vertical-align: middle;
    }

    .dropdown-item.form-control {
      border: none;
      border-radius: 0;
    }

    .dropdown-item.form-control:focus {
      border: none;
      box-shadow: none;
    }

    .input-group .btn {
      border-radius: 0;
    }

  </style>
  <script>
    const newClientInput = document.getElementById("new-client-input");
    newClientInput.addEventListener("keydown", function (event) {
      if (event.key === "Enter" || event.keyCode === 13) {
        addNewClient();
        const menubutton = document.getElementById("dropdownMenuButton").click();
      }
    })

    function updateJobItem(jobItemId, isChecked) {
      fetch(`/update_job/{{ started_job.pk }}/`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRFToken': '{{ csrf_token }}'
        },
        body: JSON.stringify({
          "job_item_id": jobItemId,
          "complete": isChecked
        })
      })
        .catch(error => console.error(error));
    };
    function updateNotes() {
      var notesInput = document.getElementById("notes");
      var notes = notesInput.value.trim();
      fetch(`/update_job/{{ started_job.pk }}/`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRFToken': '{{ csrf_token }}'
        },
        body: JSON.stringify({

          "notes": notes
        })
      })
        .catch(error => console.error(error));
    };
    function parseJobItmes() {
      var job_items = document.querySelectorAll('.job-item');
      var items_data = {};

      for (var i = 0; i < job_items.length; i++) {
        var job_item = job_items[i]
        items_data[job_item.id] = job_item.checked
      }
      return items_data
    }

    function jobComplete() {
      var clientName = document.getElementById("client-dropdown");
      if (clientName.innerText.trim() === "Select Client") {
        alert("Error. Please select a client to complete job.");
        return;
      } else {
        const form = document.querySelector(".job-form")
        form.submit()
      }
    }
  </script>
</div>
{% endblock %}
